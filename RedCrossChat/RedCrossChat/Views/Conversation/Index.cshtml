@{

    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}


<div class="app-chat overflow-hidden card">
    <div class="row g-0">
        <!-- Sidebar Left -->
        <div class="col app-chat-sidebar-left app-sidebar overflow-hidden" id="app-chat-sidebar-left">
            <div class="chat-sidebar-left-user sidebar-header d-flex flex-column justify-content-center align-items-center flex-wrap p-4 mt-2">
                <div class="avatar avatar-xl avatar-online">
                    <span class="avatar-initial rounded-circle bg-label-success">
                        @User.Identity.Name.Substring(0, 1)
                    </span>
                </div>
                <h5 class="mt-3 mb-1">@User.Identity.Name</h5>

                <i class="bx bx-x bx-sm cursor-pointer close-sidebar me-1 fs-4 " data-bs-toggle="sidebar" data-overlay="" data-target="#app-chat-sidebar-left"></i>
            </div>
            <div class="sidebar-body px-4 pb-4 ps">
@*                <div class="my-4">
                    <span class="text-muted text-uppercase">Status</span>
                    <div class="d-grid gap-1 mt-2">
                        <div class="form-check form-check-success">
                            <input name="chat-user-status" class="form-check-input" type="radio" value="active" id="user-active" checked="">
                            <label class="form-check-label" for="user-active">Active</label>
                        </div>
                        <div class="form-check form-check-danger">
                            <input name="chat-user-status" class="form-check-input" type="radio" value="busy" id="user-busy">
                            <label class="form-check-label" for="user-busy">Busy</label>
                        </div>
                        <div class="form-check form-check-warning">
                            <input name="chat-user-status" class="form-check-input" type="radio" value="away" id="user-away">
                            <label class="form-check-label" for="user-away">Away</label>
                        </div>
                        <div class="form-check form-check-secondary">
                            <input name="chat-user-status" class="form-check-input" type="radio" value="offline" id="user-offline">
                            <label class="form-check-label" for="user-offline">Offline</label>
                        </div>
                    </div>
                </div>*@
                <div class="my-4">
                    <span class="text-muted text-uppercase"></span>
                    <ul class="list-unstyled d-grid gap-2 mt-2">
                        <li class="menu-item   @Html.IsSelected(controller: "Home", action: "Dashboard") ">
                            <a href="/" class="menu-link text-muted">
                                <i class="menu-icon tf-icons bx bx-home-circle"></i>
                                <div data-i18n="Dashboards"></div>
                            </a>
                        </li>

                        <li class="menu-item @Html.IsSelected(controller: "Conversation", action: "List")">
                            <a asp-action="List" asp-controller="Conversation" class="menu-link text-muted">
                                <i class="menu-icon tf-icons bx bx-chat text-muted"></i>
                                <div data-i18n="Conversations"></div>
                            </a>
                        </li>


                    </ul>
                </div>

                <ul>
                    <li class="dropdown-item @Html.IsSelected(controller: "Auth", action: "Login")">
                        <form asp-action="Login" asp-controller="Auth" method="post">
                            <button class="btn  btn-danger" type="submit"  style="text-decoration: none; color: white; cursor: pointer;">
                                <i class="bx bx-power-off me-2"></i>
                                <span class="align-middle">Log Out</span>
                            </button>
                        </form>
                    </li>
                </ul>

                <div class="ps__rail-x" style="left: 0px; bottom: 0px;"><div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div></div><div class="ps__rail-y" style="top: 0px; right: 0px;"><div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div></div>
            </div>
        </div>
        <!-- /Sidebar Left-->
        <!-- Chat & Contacts -->
        <div class="col app-chat-contacts app-sidebar flex-grow-0 overflow-hidden border-end" id="app-chat-contacts">
            <div class="sidebar-header pt-3 px-3 mx-1">
                <div class="d-flex align-items-center me-3 me-lg-0">
                    <div class="flex-shrink-0 avatar avatar-online me-2" data-bs-toggle="sidebar" data-overlay="app-overlay-ex" data-target="#app-chat-sidebar-left">
                        <img src="~/img/RedCrossLogo.png" alt="Kenya Red Cross Logo" class="w-px-40 h-auto rounded-circle" />
                    </div>

                    <div class="flex-grow-1 input-group input-group-merge rounded-pill ms-1">
                        <span class="input-group-text" id="basic-addon-search31"><i class="bx bx-search fs-4"></i></span>
                        <input type="text" class="form-control chat-search-input" placeholder="Search..." aria-label="Search..." aria-describedby="basic-addon-search31">
                    </div>
                </div>
                <i class="bx bx-x cursor-pointer position-absolute top-0 end-0 mt-2 me-1 fs-4 d-lg-none d-block" data-overlay="" data-bs-toggle="sidebar" data-target="#app-chat-contacts"></i>
            </div>
            <hr class="container-m-nx mt-3 mb-0">
            <div class="sidebar-body ps ps--active-y">

                <!-- Chats -->
                <ul class="list-unstyled chat-contact-list pt-1" id="chat-list" style="height: 80vh;overflow:scroll">
                    
                    <li class="chat-contact-list-item chat-list-item-0 d-none" id="no-chats" >
                        <h6 class="text-muted mb-0">No Chats Found</h6>
                    </li>  
                </ul>
               
                 <div class="ps__rail-x" style="left: 0px; bottom: 0px;">
                    <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div>
                </div>
                <div class="ps__rail-y" style="top: 250px; height: 250px; right: 0px;">
                    <div class="ps__thumb-y" tabindex="0" style="top: 250px; height: 250px;">
                    </div>
                </div>
            </div>
        </div>
        <!-- /Chat contacts -->
        <!-- Chat History -->
        <div class="col app-chat-history">
            <div class="chat-history-wrapper">
                <div class="chat-history-header border-bottom">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex overflow-hidden align-items-center" id='chat-contact-info'>
                            
                        </div>

                        <div class="btn-group">
                            <button id="btn-active-history" style="position:relative" class="btn btn-info m-0 " data-bs-toggle="" data-bs-target="#offcanvasHistory" aria-controls="offcanvasHistory"> History <span class="badge bg-label-danger d-none rounded-pill" style="position:absolute;left:90%;top:-25%">0</span> </button>

                            <button id="btn-request-details" style="position:relative" class="btn btn-primary m-0" data-bs-toggle="offcanvas" data-bs-target="#offcanvasEnd" aria-controls="offcanvasEnd"> Pending Requests <span class="badge bg-label-danger  rounded-pill" style="position:absolute;left:90%;top:-25%">0</span> </button>   
                        
                        </div>

                        
                        <div class="d-flex align-items-center">
                            
                          
                            <div class="dropdown">
                                <button class="btn p-0" type="button" id="chat-header-actions" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="bx bx-dots-vertical-rounded fs-4"></i>
                                </button>
                                </div>
                            </div>

                            
                        </div>
                    </div>
                </div>
                <div class="chat-history-body ps ps--active-y d-flex">
                    <ul class="list-unstyled chat-history mb-0 w-100" id="ConvList" >

                    </ul>

                  
                    <div class="ps__rail-x" style="left: 0px; bottom: 0px;">
                        <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div>
                    </div>
                    <div class="ps__rail-y" style="top: 250px; height: 250px; right: 0px;">
                        <div class="ps__thumb-y" tabindex="0" style="top: 250px; height: 250px;">
                        </div>
                    </div>
                </div>
                <!-- Chat message form -->
                <div class="chat-history-footer">
                    <form class="fsend-message d-flex justify-content-between align-items-center ">
                        <input class="form-control message-input border-0 me-3 shadow-none" placeholder="Type your message here..." id="fsend-imessage">
                        <div class="message-actions d-flex align-items-center">
                            
                            <button class="btn btn-primary d-flex send-msg-btn">
                                <i class="bx bx-paper-plane me-md-1 me-0"></i>
                                <span class="align-middle d-md-inline-block d-none">Send</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /Chat History -->
        <!-- Sidebar Right -->
        <div class="col app-chat-sidebar-right app-sidebar overflow-hidden" id="app-chat-sidebar-right">
            <div class="sidebar-header d-flex flex-column justify-content-center align-items-center flex-wrap p-4 mt-2">
                <div class="avatar avatar-xl avatar-online">
                    <img src="../../assets/img/avatars/2.png" alt="Avatar" class="rounded-circle">
                </div>
                <h6 class="mt-3 mb-1">Felecia Rower</h6>
                <small class="text-muted">NextJS Developer</small>
                <i class="bx bx-x bx-sm cursor-pointer close-sidebar me-1 fs-4 d-block" data-bs-toggle="sidebar" data-overlay="" data-target="#app-chat-sidebar-right"></i>
            </div>
            <div class="sidebar-body px-4 pb-4 ps">
                <div class="my-3">
                    <span class="text-muted text-uppercase">About</span>
                    <p class="mb-0 mt-2">A Next. js developer is a software developer who uses the Next. js framework alongside ReactJS to build web applications.</p>
                </div>
                <div class="my-4">
                    <span class="text-muted text-uppercase">Personal Information</span>
                    <ul class="list-unstyled d-grid gap-2 mt-2">
                        <li class="d-flex align-items-center">
                            <i class="bx bx-envelope"></i>
                            <span class="align-middle ms-2">josephGreen@email.com</span>
                        </li>
                        <li class="d-flex align-items-center">
                            <i class="bx bx-phone-call"></i>
                            <span class="align-middle ms-2">+1(123) 456 - 7890</span>
                        </li>
                        <li class="d-flex align-items-center">
                            <i class="bx bx-time-five"></i>
                            <span class="align-middle ms-2">Mon - Fri 10AM - 8PM</span>
                        </li>
                    </ul>
                </div>
                <div class="mt-4">
                    <span class="text-muted text-uppercase">Options</span>
                    <ul class="list-unstyled d-grid gap-2 mt-2">
                        <li class="cursor-pointer d-flex align-items-center">
                            <i class="bx bx-bookmark"></i>
                            <span class="align-middle ms-2">Add Tag</span>
                        </li>
                        <li class="cursor-pointer d-flex align-items-center">
                            <i class="bx bx-star"></i>
                            <span class="align-middle ms-2">Important Contact</span>
                        </li>
                        <li class="cursor-pointer d-flex align-items-center">
                            <i class="bx bx-image-alt"></i>
                            <span class="align-middle ms-2">Shared Media</span>
                        </li>
                        <li class="cursor-pointer d-flex align-items-center">
                            <i class="bx bx-trash-alt"></i>
                            <span class="align-middle ms-2">Delete Contact</span>
                        </li>
                        <li class="cursor-pointer d-flex align-items-center">
                            <i class="bx bx-block"></i>
                            <span class="align-middle ms-2">Block Contact</span>
                        </li>
                    </ul>
                </div>
                <div class="ps__rail-x" style="left: 0px; bottom: 0px;"><div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div></div><div class="ps__rail-y" style="top: 0px; right: 0px;"><div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div></div>
            </div>
        </div>
        <!-- /Sidebar Right -->

        <div class="app-overlay"></div>
   
        <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasEnd" aria-labelledby="offcanvasEndLabel">
            <div class="offcanvas-header">
                <h5 id="offcanvasEndLabel" class="offcanvas-title">Pending Requests</h5>
                <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body  mx-0 flex-grow-0">
                <div class="sidebar-body ps ps--active-y">
                    <ul class="list-unstyled chat-contact-list mb-0 w-100  ps ps--active-y" id="chat-handover-requests">
                    </ul>
                </div>
               
            </div>
        </div>

    <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasHistory" aria-labelledby="offcanvasHistoryLabel">
            <div class="offcanvas-header">
                <h5 id="offcanvasHistoryLabel" class="offcanvas-title">Historical Conversation</h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body  mx-0 flex-grow-0">
            <ul class="list-unstyled chat-history mb-0" id="chat-prev-history" style="display:flex;flex-direction:column">
               
            </ul>
            
         </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <!-- DataTables -->
        <link rel="stylesheet" href="~/library/sneat/assets/vendor/css/pages/page-chat.css">
      
    </environment>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <environment names="Development,Staging,Production">

        

        <script >

            var snd = new  Audio("data:audio/wav;base64,
    

            let activeConversation;

            let currentLength=0;

            let conversartions = [];

            let interval = 2500;

            let iteration = 0;

            let backgrounds = ['primary', 'secondary', 'primary', 'danger', 'info', 'success', 'dark','primary','info','success']

            const i = document.querySelector(".chat-history-body")

            showHandOverPopup = false;

            const UpdateUI=(data)=>{

                if (data != undefined && conversartions.length < data.length) {
                    $("#chat-list").html(`<li class="chat-contact-list-item chat-contact-list-item-title">
                                                <h5 class="text-primary mb-0">Chats</h5>
                                            </li>`);

                    for (let i = 0; i < data.length; i++) {
                        
                        AppendToSidebar(data[i]);
                    }
                    
                } else if (data != undefined && conversartions.length == data.length) {

                    let messages = 0;

                    for (let i = 0; i < conversartions.length; i++) {

                        if (conversartions[i].chatMessages.length < data[i].chatMessages.length) {

                            let lastMessage = data[i].chatMessages[data[i].chatMessages.length - 1];
 
                           
                            if (lastMessage.type == 3) {

                                updateLastMessage(data[i])

                                messages++;
                            }

                            if (conversartions[i].id == activeConversation.id) {

                                UpdateChatActiveConversation(data[i].chatMessages)
                            
                            }
                        }

                    }

                    if (messages > 0) {
                        success("new messages");
                        snd.play();
                        snd.play();
                    }
                }

                conversartions = data
            }

            

            const AppendToSidebar = (data, container = "#chat-list") => {

                const { persona, id, dateCreated, reason,chatMessages } = data;

                let str_class='';

                if (activeConversation != null) {
                    
                    if (id == activeConversation.id) {
                        str_class = "active"
                    }
                }

                let lastMessage = chatMessages[chatMessages.length - 1];

                if(lastMessage ==null){

                }

                $(container).append(`
                                  <li class="chat-contact-list-item chat-item ${str_class}" data-id='${id}'>
                                    <a class="d-flex align-items-center">
                                        <div class="flex-shrink-0 avatar avatar-busy">
                                                        ${username(persona.codeName)}
                                        </div>
                                        <div class="chat-contact-info flex-grow-1 ms-3">
                                                        <h6 class="chat-contact-name text-truncate m-0">Client ${persona.codeName}</h6>
                                                        <p class="chat-contact-status text-truncate mb-0 text-muted" id='last-message'>${lastMessage.message}</p>
                                        </div>
                                        <small class="text-muted mb-auto moment-date" data-date='${lastMessage.dateCreated}'></small>
                                    </a>
                                </li>`);

                CalculateDates();
            }, updateLastMessage=(data)=>{

               

                let lastMessage = data.chatMessages[data.chatMessages.length - 1];

                $(".chat-item").toArray().forEach(item => {

                    
                    if(data.id == $(item).data('id')){
                      
                        $(item).find("p").html(lastMessage.message)
                       
                        $(item).find("small").attr("data-date", lastMessage.dateCreated)
                    }
                })

            }, username = str => str != null ? `<span class="avatar-initial rounded-circle bg-label-${backgrounds[str.charAt(str.length - 1)]}">${str.charAt(0)}${str.charAt(str.length - 1)}</span>` : '';

            function CalculateDates() {

                let cDate = new Date();

                const getDateObject = cDate => {

                    return [cDate.getFullYear(), cDate.getMonth(), cDate.getDate(), cDate.getHours(), cDate.getMinutes(), cDate.getMilliseconds()]
                }



                $(".moment-date").toArray().forEach(e => {


                    var now = moment(new Date()); //todays date

                    var end = moment($(e).data('date')); // another date

                    

                    if ($(e).data('format') != undefined) {

                        $(e).html(end.format($(e).data('format')));

                        return;
                    }

                    let days = now.diff(end, 'days'), hours = now.diff(end, 'hours'), minutes = now.diff(end, 'minutes');

                    if (days == 0 && hours == 0 && minutes == 0) {
                        $(e).html(now.diff(end, 'seconds') + " s")
                    }else if (days == 0 && hours == 0 && minutes <= 59  && minutes > 0) {
                        $(e).html(now.diff(end, 'minutes') + " minutes")
                    } else if (days == 0 && hours > 0) {
                        $(e).html(now.diff(end, 'hours') + " hours")
                    }else if(days <=7 && days > 0){
                        $(e).html(now.diff(end, 'days') + " days ")
                    }else{
                        $(e).html(end.format('MMM Do YY'))
                    }

                    

                })
            }

            function UpdateChatActiveConversation(data) {

                if (activeConversation == undefined)
                    return;

                const { id, reason, chatMessages, isReturnClient } = activeConversation;

                let persona;

                if(activeConversation.persona !=undefined && activeConversation.persona !=null)
                  persona=activeConversation.persona

                const a = $("#ConvList");

                let detailed = '';

                if (isReturnClient){
                    detailed='Return Client'
                }

                let lastConv;

                if (data != undefined && chatMessages.length < data.length) {

                    lastConv = data[data.length - 1];

                    activeConversation.chatMessages.push(lastConv);

                    a.append(message(lastConv))

                    if (lastConv.type == 1) {
                        //success("You have a message !")
                    }
                    i.scrollTo(0, i.scrollHeight)

                    return;
                   
                }
                else if (data != undefined && chatMessages.length == data.length) {

                    lastConv = data[data.length - 1];

                    let it = chatMessages[chatMessages.length - 1];

                    /*if (it.message == null && lastConv.message != null) {

                        a.append(message(lastConv,true))

                        rawConversations[rawConversations.length - 1] = lastConv;

                        activeConversation.rawConversations = rawConversations;
                    }*/

                    return;
                }

                $("#chat-contact-info").html(`<i class="bx bx-menu bx-sm cursor-pointer d-lg-none d-block me-2" data-bs-toggle="sidebar" data-overlay="" data-target="#app-chat-contacts"></i>
                                        <div class="flex-shrink-0 avatar">
                                            ${username(persona.codeName)}
                                        </div>
                                        <div class="chat-contact-info flex-grow-1 ms-3" >
                                            <h6 class="m-0">${persona.codeName}</h6>
                                            <small class="user-status text-muted">${reason}</small>
                                        </div>`);


                a.html('');

               

                for (let i = 0; i < chatMessages.length; i++) {

                    const conv = chatMessages[i];

                    attachMessage(conv,a)

                    CalculateDates()
                }
                i.scrollTo(0, i.scrollHeight)
               
            }

            const attachMessage=(conv, a,str_class='')=>{

                a.append(message(conv, false,str_class));
            }, message = (conv, isReply = false, str_class='') => {

                return conv.type == 0 || conv.type==2 ? question(conv,str_class) : response(conv,str_class);
            }, response = (conv, str_class='') => {

                let message = conv.message;

                if(message ==null)
                    message= conv.question.question

                

                return `<li class="chat-message ${str_class}">
                                      <div class="d-flex overflow-hidden">
                                        <div class="user-avatar flex-shrink-0 me-3">
                                          <div class="avatar avatar-sm">
                                            <span class="avatar-initial rounded-circle bg-label-success">${username(activeConversation.persona.chatID)}</span>
                                          </div>
                                        </div>
                                        <div class="chat-message-wrapper flex-grow-1">
                                          <div class="chat-message-text">
                                            <p class="mb-0">${conv.message ?? conv.question.question}</p>
                                          </div>
                                          <div class="text-muted mt-1">
                                                            <small class='moment-date' data-format='h:mm' data-date='${conv.dateCreated}'></small>
                                          </div>
                                        </div>
                                      </div>
                                    </li>`;
            
            }, question = (conv, str_class = '') => {

                let question = conv.message;

                if(question ==null){
                    question = conv.question.question
                }

                return `<li class="chat-message ${str_class} chat-message-right ">
                                                    <div class="d-flex overflow-hidden">
                                                        <div class="chat-message-wrapper flex-grow-1">
                                                            <div class="chat-message-text">
                                                                <p class="mb-0">${question}</p>
                                                            </div>
                                                            <div class="text-end text-muted mt-1">
                                                                <i class="bx bx-check-double text-success"></i>
                                                                            <small class='moment-date' data-format='h:mm' data-date='${conv.dateCreated}'></small>
                                                            </div>
                                                        </div>
                                                        <div class="user-avatar flex-shrink-0 ms-3">
                                                            <div class="avatar avatar-sm">
                                                                <span class="avatar-initial rounded-circle bg-label-success">${'BOT'}</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>`
            
            }, GetConversation = id => {

                $.get("/Conversation/GetConversation?id=" + id).then(resp => {

                    activeConversation = resp.responseData;


                    UpdateChatActiveConversation();

                })
            }, StartConversation=(id,btn)=>{

                $('.chat-contact-list-item').toArray().forEach(chat => {
                    $(chat).removeClass('active');
                });

                $("#btn-active-history").attr('data-bs-toggle', 'offcanvas')

                if(btn !=undefined){
                    $(btn).addClass('active')
                }


                if (conversartions.length == 0) {
                    return GetConversation(id);
                }


                for (let i = 0; i < conversartions.length; i++) {

                    if ( id == conversartions[i].id) {
                        activeConversation = conversartions[i];
                    }
                }
                UpdateChatActiveConversation();

                $(".chat-contact-list-item").find("[data-id='" + id + "']").addClass('active')
                i.scrollTo(0, i.scrollHeight)

                console.log("scrolling point")
                i.scrollTo(0, i.scrollHeight)

            }

            function CheckForUpdatesActiveConversation() {

                if (activeConversation == undefined)
                    return;

                $.post("/Conversation/GetRawConversations/?id=" + activeConversation.id).then(resp => {
                    UpdateChatActiveConversation(resp.responseData)

                    
                    i.scrollTo(0, i.scrollHeight)
                })
            }

            function getConversationsObject(){
                $.post("/Conversation/GetMyConversationIncludingHandOverRequests").then(resp => {

                    const data=resp.responseData

                    $("#btn-request-details span").html(data.handOverRequests.length)

                    if (data.handOverRequests.length > 0){

                        // add the title for the human hand over requesrs
                        $("#chat-handover-requests").html('');

                        displayHandOverRequests(data.handOverRequests)
                    }

                    UpdateUI(data.myConversations)

                })
            }

            function displayHandOverRequests(data){

                data.forEach(request => {

                    $("#chat-handover-requests").append(appendHandOverRequest(request))

                });

            }

            const appendHandOverRequest = (request) => {

                let feeling = '';

                if (request.conversation.feeling != null) {
                    feeling = request.conversation.feeling.name;
                }

                if (feeling == 'others' || feeling == 'other')
                    feeling = request.conversation.feelingDetail;

                return `<li class="card my-2" data-id='${request.id}'>
                                    <a class="d-flex align-items-center">
                                      <div class="flex-shrink-0 avatar avatar-offline">
                                          ${username(request.conversation.persona.codeName)}
                                      </div>
                                      <div class="chat-contact-info flex-grow-1 ms-3">
                                        <h6 class="chat-contact-name text-truncate m-0">Client ${request.conversation.persona.codeName} </h6>
                                        <p class="chat-contact-status text-truncate mb-0 text-muted">${feeling}</p>
                                      </div>
                                    </a>
                                  </li>`
            };

            $(document).ready(function () {

               /* if (GetActiveConversation() != null) {
                    StartConversation(GetActiveConversation());
                }*/

                getConversationsObject();

                setInterval(function () {
                    CalculateDates();

                    getConversationsObject()

                }, interval);

            });

            $(document).on('click', '#btn-active-history', function () {

                console.log("hide off -chavas")

                if(activeConversation ==null){
                    $("#offcanvasHistory").removeClass('show')

                    return;
                }

                $.post("/Conversation/GetHistory/?id=" + activeConversation.persona.id).then(response => {
                  

                    response.responseData.forEach(conv => {
                        //chat-history

                        if (activeConversation.id != conv.id){
                            let chatMessages = conv.chatMessages;

                            for (let i = 0; i < chatMessages.length; i++) {

                                const conv = chatMessages[i];

                                attachMessage(conv, $("#chat-prev-history"), 'card my-2 p-2')

                                CalculateDates()
                            }
                        }
                           

                       
                    })
                })

            });

            $(document).on('click', '#chat-list .chat-contact-list-item', function () {

                let current = this;

                StartConversation($(current).data('id'),current);
            });


            $(document).on('click', '#chat-handover-requests .chat-contact-list-item', function () {

                let current = this;

                if ($(current).data('id') != undefined) {
                    $.post("/Conversation/UpdateHandOverRequest/?id=" + $(current).data('id')).then(response => {
                        $(current).remove();
                    })
                }

            });

            $(document).on('submit', '.fsend-message', function (e) {

                e.preventDefault();

                const a = $("#fsend-imessage");

                if (activeConversation == undefined) {
                    error("there is no active conversation");
                }

                $.post("/Conversation/CreateResponse", { conversationId: activeConversation.id, question: a.val() }).then(resp => {
                    a.val('');
                    CheckForUpdatesActiveConversation();

                });
            });


            $(document).ready(function(){

                const container =
                document.querySelector('#chat-list');
                const ps = new PerfectScrollbar(container);

                 console.log("Here is workig")
            });

        </script>

        <script src="~/library/sneat/assets/vendor/js/pages/page-chat.js"></script>
    </environment>
}
        